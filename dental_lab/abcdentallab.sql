DROP DATABASE IF EXISTS abcdentallab;
CREATE DATABASE abcdentallab;
USE abcdentallab;

DROP TABLE IF EXISTS VEND_MATERIAL_LINE;
DROP TABLE IF EXISTS VEND_SUPPLY_LINE;
DROP TABLE IF EXISTS VENDOR_INVOICE;
DROP TABLE IF EXISTS SUPPLY;
DROP TABLE IF EXISTS MATERIAL;
DROP TABLE IF EXISTS VENDOR;
DROP TABLE IF EXISTS CASE_INVOICE_LINE;
DROP TABLE IF EXISTS PRODUCTION;
DROP TABLE IF EXISTS DELIVERY;
DROP TABLE IF EXISTS SERVICE;
DROP TABLE IF EXISTS EMPLOYEE;
DROP TABLE IF EXISTS OCCUPATION;
DROP TABLE IF EXISTS DENTAL_CASE;
DROP TABLE IF EXISTS CHECK_PAYMENT;
DROP TABLE IF EXISTS OFFICE;


CREATE TABLE OFFICE (
	OFFICE_ID 			INTEGER 		PRIMARY KEY,
	OFFICE_NAME 		VARCHAR(35) 	NOT NULL,
	OFFICE_ADDRESS 		VARCHAR(100) 	NOT NULL,
	OFFICE_CITY      	VARCHAR(20) 	NOT NULL,
	OFFICE_STATE   		CHAR(2) 		NOT NULL,
	OFFICE_ZIPCODE   	CHAR(5) 		NOT NULL,
	OFFICE_AREACODE   	CHAR(3) 		NOT NULL,
	OFFICE_PHONE 	    CHAR(10) 		NOT NULL,	
	OFFICE_HOURS 	    VARCHAR(12) 	NOT NULL,
	OFFICE_LUNCH_TIME   VARCHAR(12) 	NOT NULL
);

CREATE TABLE DENTAL_CASE(
	DEN_CASE_ID					INTEGER			PRIMARY KEY,
	DEN_CASE_PAT_FNAME			VARCHAR(15) 	NOT NULL,
	DEN_CASE_PAT_LNAME			VARCHAR(15) 	NOT NULL,
	DEN_CASE_GETDATE			DATE 			NOT NULL,
	DEN_CASE_PROD_DUEDATE		DATE 			NOT NULL,
	DEN_CASE_INVOICE_DATE		DATE,
	DEN_CASE_DELIVERYBY_DATE	DATE,
	OFFICE_ID					INTEGER 		NOT NULL,
	FOREIGN KEY (OFFICE_ID) REFERENCES OFFICE(OFFICE_ID)
);

CREATE TABLE OCCUPATION(
	OCCUPATION_CODE				INTEGER 		PRIMARY KEY,
	OCCUPATION_DESCRIPTION		VARCHAR(40) 	NOT NULL,
	OCCUPATION_SALARY 			INTEGER 		NOT NULL
);

CREATE TABLE EMPLOYEE (
	EMP_ID				INTEGER 		PRIMARY KEY,
	EMP_FNAME			VARCHAR(20) 	NOT NULL,
	EMP_LNAME			VARCHAR(20) 	NOT NULL,
    EMP_DOB				DATE 			NOT NULL,
	EMP_SSN				CHAR(9) 		NOT NULL,
	EMP_ADDRESS			VARCHAR(100)	NOT NULL,
	EMP_CITY      		VARCHAR(20)		NOT NULL,
	EMP_STATE   		CHAR(2)			NOT NULL,
	EMP_ZIPCODE   		CHAR(5)			NOT NULL,
	EMP_EMAIL			VARCHAR(50)		NOT NULL,
	EMP_AREACODE 		CHAR(3)			NOT NULL,
	EMP_PHONE			CHAR(10)		NOT NULL,
    EMP_DOE				DATE 			NOT NULL,
    OCCUPATION_CODE		INTEGER 		NOT NULL,
	FOREIGN KEY (OCCUPATION_CODE) REFERENCES OCCUPATION(OCCUPATION_CODE) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE PRODUCTION (
	EMP_ID 				INTEGER 		NOT NULL,
	DEN_CASE_ID 		INTEGER 		NOT NULL,
    PRIMARY KEY(EMP_ID,DEN_CASE_ID),
	FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE (EMP_ID) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (DEN_CASE_ID) REFERENCES DENTAL_CASE (DEN_CASE_ID) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE DELIVERY (
	EMP_ID 				INTEGER 		NOT NULL,
	DEN_CASE_ID 		INTEGER 		NOT NULL,		
    PRIMARY KEY(EMP_ID,DEN_CASE_ID),
	FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE (EMP_ID) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (DEN_CASE_ID) REFERENCES DENTAL_CASE (DEN_CASE_ID) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE SERVICE(
	SERVICE_CODE			INTEGER 		PRIMARY KEY,
	SERVICE_DESCRIPTION		VARCHAR(50)		NOT NULL,
	SERVICE_PRICE			NUMERIC(10,2) 	DEFAULT 0.00 	NOT NULL
);

CREATE TABLE CASE_INVOICE_LINE(
	DEN_CASE_ID 	INTEGER 		NOT NULL,
	SERVICE_CODE	INTEGER 		NOT NULL,
    CLINE_DESCRIP	VARCHAR(100)	NOT NULL,
	CLINE_UNITS		NUMERIC(4,2) 	NOT NULL,
	CLINE_PRICE		NUMERIC(9,2) 	DEFAULT 0.00 	NOT NULL,
	CLINE_TAX		NUMERIC(9,2) 	DEFAULT 0.00	NOT NULL,
	CLINE_SUBTOTAL	NUMERIC(9,2) 	DEFAULT 0.00	NOT NULL,
    PRIMARY KEY(DEN_CASE_ID,SERVICE_CODE),
	FOREIGN KEY (DEN_CASE_ID) REFERENCES DENTAL_CASE (DEN_CASE_ID) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (SERVICE_CODE) REFERENCES SERVICE (SERVICE_CODE)
);

CREATE TABLE VENDOR (
	VEND_ID 		INTEGER 		PRIMARY KEY,
	VEND_ADDRESS	VARCHAR(100) 	NOT NULL,
	VEND_CITY      	VARCHAR(20) 	NOT NULL,
	VEND_STATE   	CHAR(2) 		NOT NULL,
	VEND_ZIPCODE   	CHAR(5) 		NOT NULL,
	VEND_AREACODE   CHAR(3) 		NOT NULL,
	VEND_PHONE		CHAR(10) 		NOT NULL,
	VEND_WEB		VARCHAR(80) 	NOT NULL,
	VEND_ACC_NUM	CHAR(10) 		NOT NULL,
	VEND_USERNAME	VARCHAR(20) 	NOT NULL,
	VEND_PASSWORD 	VARCHAR(20) 	NOT NULL
);

CREATE TABLE SUPPLY(
	SUPPLY_ID 			INTEGER 		PRIMARY KEY,
	SUPPLY_DESCRIP		VARCHAR(80) 	NOT NULL,
	SUPPLY_QUANTITY		INTEGER 		NOT NULL,
	SUPPLY_THRESHOLD	INTEGER 		NOT NULL
);

CREATE TABLE MATERIAL(
	MATERIAL_ID 			INTEGER 		PRIMARY KEY,
	MATERIAL_DESCRIP		VARCHAR(80) 	NOT NULL,
	MATERIAL_QUANTITY		INTEGER 		NOT NULL,
	MATERAIL_THRESHOLD		INTEGER 		NOT NULL
);

CREATE TABLE VENDOR_INVOICE (
	VINV_CODE		INTEGER 		PRIMARY KEY,
	VEND_ID 		INTEGER			NOT NULL,
	EMP_ID 			INTEGER			NOT NULL,
	VINV_DATE 	    DATE 			NOT NULL,
	VINV_TRACKING	VARCHAR(20) 	NOT NULL,
	FOREIGN KEY (VEND_ID) REFERENCES VENDOR (VEND_ID),
	FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE (EMP_ID)
);

CREATE TABLE VEND_MATERIAL_LINE (
	VINV_CODE			INTEGER 		NOT NULL,
	MATERIAL_ID			INTEGER 		NOT NULL,
	VMLINE_UNITS		INTEGER 		NOT NULL,
	VMLINE_PRICE		NUMERIC(9,2) 	DEFAULT 0.00 	NOT NULL,
	VMLINE_TAX			NUMERIC(9,2) 	DEFAULT 0.00	NOT NULL,
	VMLINE_SUBTOTAL		NUMERIC(9,2) 	DEFAULT 0.00	NOT NULL,
    PRIMARY KEY (VINV_CODE,MATERIAL_ID),
	FOREIGN KEY (VINV_CODE) REFERENCES VENDOR_INVOICE (VINV_CODE) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (MATERIAL_ID) REFERENCES MATERIAL (MATERIAL_ID)
);


CREATE TABLE VEND_SUPPLY_LINE (
	VINV_CODE			INTEGER 		NOT NULL,
	SUPPLY_ID			INTEGER 		NOT NULL,
	VSLINE_UNITS		INTEGER 		NOT NULL,
	VSLINE_PRICE		NUMERIC(9,2) 	DEFAULT 0.00 	NOT NULL,
	VSLINE_TAX			NUMERIC(9,2) 	DEFAULT 0.00 	NOT NULL,
	VSLINE_SUBTOTAL		NUMERIC(9,2) 	DEFAULT 0.00 	NOT NULL,
    PRIMARY KEY (VINV_CODE,SUPPLY_ID),
	FOREIGN KEY (VINV_CODE) REFERENCES VENDOR_INVOICE (VINV_CODE) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (SUPPLY_ID) REFERENCES SUPPLY (SUPPLY_ID)
);


CREATE TABLE CHECK_PAYMENT (
	CHECK_NUM 				INTEGER 		PRIMARY KEY,
    CHECK_AMOUNT			NUMERIC(8,2)	NOT NULL,
	CHECK_BANK 				VARCHAR(30) 	NOT NULL,
	CHECK_CASHOUT_DATE		DATE,
	OFFICE_ID 	    		INTEGER 		NOT NULL,
	FOREIGN KEY (OFFICE_ID) REFERENCES OFFICE (OFFICE_ID)
);


CREATE UNIQUE INDEX idx_office ON OFFICE(OFFICE_NAME);
CREATE UNIQUE INDEX idx_patient ON DENTAL_CASE(DEN_CASE_PAT_FNAME,DEN_CASE_PAT_LNAME);
CREATE UNIQUE INDEX idx_empployee ON EMPLOYEE(EMP_FNAME,EMP_LNAME);








